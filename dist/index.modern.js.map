{"version":3,"file":"index.modern.js","sources":["../src/autocomplete.js","../src/autocomplete-v4.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Autocomplete,\r\n  IconButton,\r\n  TextField,\r\n  useMediaQuery,\r\n  useTheme,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { grey } from \"@mui/material/colors\";\r\n\r\nconst ResponsiveAutocomplete = (props) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  const {\r\n    mobileFocusedSx,\r\n    mobileBackgroundClassName,\r\n    backButtonSx,\r\n    backButtonClassName,\r\n    renderInput,\r\n    onFocus,\r\n    onClose,\r\n    slotProps = {},\r\n    blurOnSelect,\r\n    ...autocompleteProps\r\n  } = props;\r\n\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const isMobileFocused = isFocused && isMobile;\r\n\r\n  // Lock page scroll when mobile input is focused\r\n  useEffect(() => {\r\n    const bodyStyle = document.body.style;\r\n    const htmlStyle = document.documentElement.style;\r\n\r\n    if (isMobileFocused) {\r\n      bodyStyle.overflow = \"hidden\";\r\n      htmlStyle.overflow = \"hidden\";\r\n      bodyStyle.position = \"fixed\";\r\n      bodyStyle.width = \"100%\";\r\n    } else {\r\n      bodyStyle.overflow = \"\";\r\n      htmlStyle.overflow = \"\";\r\n      bodyStyle.position = \"\";\r\n      bodyStyle.width = \"\";\r\n    }\r\n  }, [isFocused,isMobile]);\r\n\r\n  const handleFocus = (e) => {\r\n    setIsFocused(true);\r\n    onFocus?.(e);\r\n  };\r\n\r\n  const handleClose = (...args) => {\r\n    setIsFocused(false);\r\n    onClose?.(...args);\r\n  };\r\n\r\n  const wrappedRenderInput = (params) => {\r\n    const inputElement = renderInput ? (\r\n      renderInput(params)\r\n    ) : (\r\n      <TextField {...params} label=\"Search\" variant=\"outlined\" />\r\n    );\r\n\r\n    return React.cloneElement(inputElement, {\r\n      ...inputElement.props,\r\n      autoFocus: isFocused,\r\n    });\r\n  };\r\n\r\n  const containerSx = isMobileFocused\r\n    ? {\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        width: \"100%\",\r\n        padding: \"16px 12px 16px 0px\",\r\n        background: theme.palette.background.paper,\r\n        zIndex: 1300,\r\n        boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\r\n        height: \"100vh\",\r\n        maxWidth: \"-webkit-fill-available\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        flexDirection: \"row\",\r\n        ...mobileFocusedSx,\r\n      }\r\n    : {\r\n        position: \"relative\",\r\n      };\r\n\r\n  const paperSx = isMobileFocused\r\n    ? {\r\n        boxShadow: \"none\",\r\n        width: \"100vw\",\r\n        left: 0,\r\n        borderTop: `1.5px solid ${grey[400]}`,\r\n        borderRadius: 0,\r\n        mt: 1,\r\n      }\r\n    : {};\r\n\r\n  const popperSx = isMobileFocused\r\n    ? {\r\n        width: \"101vw !important\",\r\n        left: \"0 !important\",\r\n        right: \"0 !important\",\r\n        overflow: \"hidden\",\r\n      }\r\n    : {};\r\n\r\n  return (\r\n    <Box\r\n      className={isMobileFocused ? mobileBackgroundClassName : undefined}\r\n      sx={containerSx}\r\n    >\r\n      {isMobileFocused && (\r\n        <IconButton\r\n          className={backButtonClassName}\r\n          sx={{\r\n            alignSelf: \"flex-start\",\r\n            marginBottom: \"18px\",\r\n            ...backButtonSx,\r\n          }}\r\n          onClick={handleClose}\r\n        >\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n      )}\r\n\r\n      <Autocomplete\r\n        {...autocompleteProps}\r\n        onFocus={handleFocus}\r\n        onClose={handleClose}\r\n        renderInput={isMobile ? wrappedRenderInput : renderInput}\r\n        openOnFocus\r\n        blurOnSelect={isMobile ? true : blurOnSelect}\r\n        slotProps={{\r\n          paper: {\r\n            ...slotProps.paper,\r\n            sx: { ...paperSx, ...(slotProps.paper?.sx || {}) },\r\n          },\r\n          popper: {\r\n            ...slotProps.popper,\r\n            sx: { ...popperSx, ...(slotProps.popper?.sx || {}) },\r\n          },\r\n          ...slotProps,\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ResponsiveAutocomplete;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport { IconButton, TextField, useMediaQuery } from \"@material-ui/core\";\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst styles = (theme) => ({\r\n  wrapper: {\r\n    position: \"relative\",\r\n  },\r\n  focused: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    padding: \"16px 12px 16px 0px\",\r\n    background: theme.palette.background.paper,\r\n    zIndex: 1300,\r\n    boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\r\n    height: \"100vh\",\r\n    maxWidth: \"-webkit-fill-available\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  backButton: {\r\n    alignSelf: \"flex-start\",\r\n    marginBottom: \"18px\",\r\n  },\r\n  paper: {\r\n    boxShadow: \"none\",\r\n    width: \"100vw !important\",\r\n    left: \"0 !important\",\r\n    borderTop: `1.5px solid ${grey[400]}`,\r\n    borderRadius: 0,\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  popper: {\r\n    width: \"101vw !important\",\r\n    left: \"0 !important\",\r\n    right: \"0 !important\",\r\n    overflow: \"hidden\",\r\n  },\r\n});\r\n\r\nconst ResponsiveAutocomplete = (props) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const {\r\n    classes,\r\n    mobileBackgroundClassName,\r\n    backButtonClassName,\r\n    renderInput,\r\n    onFocus,\r\n    onClose,\r\n    blurOnSelect,\r\n    ...autocompleteProps\r\n  } = props;\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n  const isMobileFocused = isFocused && isMobile;\r\n\r\n  // Lock page scroll when mobile input is focused\r\n  useEffect(() => {\r\n    if (isMobileFocused) {\r\n      document.body.style.overflow = \"hidden\";\r\n      document.documentElement.style.overflow = \"hidden\";\r\n      document.body.style.position = \"fixed\";\r\n      document.body.style.width = \"100%\";\r\n    } else {\r\n      document.body.style.overflow = \"\";\r\n      document.documentElement.style.overflow = \"\";\r\n      document.body.style.position = \"\";\r\n      document.body.style.width = \"\";\r\n    }\r\n  }, [isFocused, isMobile]);\r\n\r\n  const handleFocus = (e) => {\r\n    setIsFocused(true);\r\n    props.onFocus && props.onFocus(e);\r\n  };\r\n\r\n  const handleClose = (...args) => {\r\n    setIsFocused(false);\r\n    props.onClose && props.onClose(...args);\r\n  };\r\n\r\n  const wrappedRenderInput = (params) => {\r\n    const inputElement = props.renderInput ? (\r\n      props.renderInput(params)\r\n    ) : (\r\n      <TextField {...params} label=\"Search\" variant=\"outlined\" />\r\n    );\r\n    return React.cloneElement(inputElement, {\r\n      ...inputElement.props,\r\n      autoFocus: isFocused,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        isMobileFocused\r\n          ? `${classes.focused} ${mobileBackgroundClassName || \"\"}`\r\n          : classes.wrapper\r\n      }\r\n    >\r\n      {isMobileFocused && (\r\n        <IconButton\r\n          className={`${classes.backButton} ${backButtonClassName || \"\"}`}\r\n        >\r\n          <ArrowBack />\r\n        </IconButton>\r\n      )}\r\n      <Autocomplete\r\n        {...autocompleteProps}\r\n        onFocus={handleFocus}\r\n        onClose={handleClose}\r\n        openOnFocus\r\n        classes={{\r\n          ...(autocompleteProps.classes || {}),\r\n          ...(isMobileFocused\r\n            ? {\r\n                paper: `${autocompleteProps.classes?.paper || \"\"} ${\r\n                  classes.paper\r\n                }`.trim(),\r\n                popper: `${autocompleteProps.classes?.popper || \"\"} ${\r\n                  classes.popper\r\n                }`.trim(),\r\n              }\r\n            : {}),\r\n        }}\r\n        blurOnSelect={isMobile ? true : props.blurOnSelect}\r\n        renderInput={isMobile ? wrappedRenderInput : props.renderInput}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ResponsiveAutocomplete);\r\n"],"names":["ResponsiveAutocomplete","props","_slotProps$paper","_slotProps$popper","isFocused","setIsFocused","useState","mobileFocusedSx","mobileBackgroundClassName","backButtonSx","backButtonClassName","renderInput","onFocus","onClose","slotProps","blurOnSelect","autocompleteProps","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","isMobileFocused","useEffect","bodyStyle","document","body","style","htmlStyle","documentElement","overflow","position","width","handleClose","args","containerSx","top","left","padding","background","palette","paper","zIndex","boxShadow","height","maxWidth","display","justifyContent","flexDirection","paperSx","borderTop","grey","borderRadius","mt","popperSx","right","React","createElement","Box","className","sx","IconButton","alignSelf","marginBottom","onClick","ArrowBackIcon","Autocomplete","_extends","e","params","inputElement","TextField","label","variant","cloneElement","autoFocus","openOnFocus","popper","withStyles","wrapper","focused","backButton","marginTop","spacing","withTheme","_autocompleteProps$cl","_autocompleteProps$cl2","classes","ArrowBack","trim"],"mappings":"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"}