{"version":3,"file":"index.umd.js","sources":["../src/autocomplete-v4.js","../src/autocomplete.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Autocomplete } from \"@material-ui/lab\";\r\nimport {\r\n  IconButton,\r\n  TextField,\r\n  useMediaQuery,\r\n} from \"@material-ui/core\";\r\nimport { useTheme, withStyles } from \"@material-ui/core/styles\";\r\nimport { ArrowBack } from \"@material-ui/icons\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\n\r\nconst styles =(theme)=>( {\r\n  wrapper: {\r\n    position: \"relative\",\r\n  },\r\n  focused: {\r\n    position: \"fixed\",\r\n    top: 0,\r\n    left: 0,\r\n    width: \"100%\",\r\n    padding: '16px 12px 16px 0px',\r\n    background: theme.palette.background.paper,\r\n    zIndex: 1300,\r\n    boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\r\n    height: \"100vh\",\r\n    maxWidth: \"-webkit-fill-available\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n  },\r\n  backButton: {\r\n    alignSelf: \"flex-start\",\r\n    marginBottom: '18px',\r\n  },\r\n  paper: {\r\n    boxShadow: 'none',            \r\n    width: '100vw !important',                \r\n    left: '0 !important', \r\n    borderTop: `1.5px solid ${grey[400]}`,\r\n    borderRadius:0,\r\n    marginTop: theme.spacing(1),   \r\n  },\r\n  popper: {\r\n    width: '101vw !important',\r\n  left: '0 !important', \r\n  right: '0 !important',\r\n    overflow:'hidden'     \r\n  },\r\n});\r\n\r\nconst ResponsiveAutocomplete = (props) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const { classes,mobileBackgroundClassName,backButtonClassName,  renderInput,\r\n    onFocus,\r\n    onClose, ...autocompleteProps } = props;\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n\r\n  useEffect(() => {\r\n    if (isFocused && isMobile) {\r\n      document.body.style.overflow = 'hidden';\r\n      document.documentElement.style.overflow = 'hidden';\r\n      document.body.style.position = 'fixed';            \r\n      document.body.style.width = '100%';                 \r\n    } else {\r\n      document.body.style.overflow = '';\r\n      document.documentElement.style.overflow = '';\r\n      document.body.style.position = '';\r\n      document.body.style.width = '';\r\n    }\r\n  }, [isFocused, isMobile]);\r\n\r\n  const handleFocus = (e) => {\r\n    setIsFocused(true);\r\n    props.onFocus && props.onFocus(e);\r\n  };\r\n\r\n  const handleClose = (...args) => {\r\n    setIsFocused(false);\r\n    props.onClose && props.onClose(...args);\r\n  };\r\n  \r\n  const wrappedRenderInput = (params) => {\r\n    const inputElement = props.renderInput ? (\r\n      props.renderInput(params)\r\n    ) : (\r\n      <TextField {...params} label=\"Search\" variant=\"outlined\" />\r\n    );\r\n\r\n    return React.cloneElement(inputElement, {\r\n      ...inputElement.props,\r\n      autoFocus: isFocused,\r\n    });\r\n  };\r\n\r\n\r\n  return (\r\n    <div className={isFocused && isMobile ? `${classes.focused} ${mobileBackgroundClassName || ''}` : classes.wrapper}>\r\n      {isFocused && isMobile && (\r\n        <IconButton  className={`${classes.backButton} ${backButtonClassName || ''}`}>\r\n          <ArrowBack />\r\n        </IconButton>\r\n      )}\r\n      <Autocomplete\r\n        {...autocompleteProps}\r\n        onFocus={handleFocus}\r\n        onClose={handleClose}\r\n        openOnFocus\r\n        classes={{\r\n          ...(autocompleteProps.classes || {}),\r\n          ...(isFocused && isMobile ? { \r\n            paper: `${autocompleteProps.classes?.paper || ''} ${classes.paper}`.trim(),\r\n            popper: `${autocompleteProps.classes?.popper || ''} ${classes.popper}`.trim(),\r\n          } : {}),\r\n        }}\r\n        blurOnSelect={isMobile?true:props.blurOnSelect}\r\n        renderInput={isMobile ? wrappedRenderInput : props.renderInput}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(ResponsiveAutocomplete);","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Autocomplete,\r\n  IconButton,\r\n  TextField,\r\n  useMediaQuery,\r\n  useTheme,\r\n  Box,\r\n} from \"@mui/material\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport { grey } from \"@mui/material/colors\";\r\n\r\nconst ResponsiveAutocomplete = (props) => {\r\n  const [isFocused, setIsFocused] = useState(false);\r\n\r\n  const {\r\n    mobileFocusedSx,\r\n    mobileBackgroundClassName,\r\n    backButtonSx,\r\n    backButtonClassName,\r\n    renderInput,\r\n    onFocus,\r\n    onClose,\r\n    slotProps = {},\r\n    ...autocompleteProps\r\n  } = props;\r\n\r\n  const theme = useTheme();\r\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n  const isMobileFocused = isFocused && isMobile;\r\n\r\n  useEffect(() => {\r\n    if (isMobileFocused) {\r\n      document.body.style.overflow = \"hidden\";\r\n      document.documentElement.style.overflow = \"hidden\";\r\n      document.body.style.position = \"fixed\";\r\n      document.body.style.width = \"100%\";\r\n    } else {\r\n      document.body.style.overflow = \"\";\r\n      document.documentElement.style.overflow = \"\";\r\n      document.body.style.position = \"\";\r\n      document.body.style.width = \"\";\r\n    }\r\n  }, [isMobileFocused]);\r\n\r\n  const handleFocus = (e) => {\r\n    setIsFocused(true);\r\n    onFocus && onFocus(e);\r\n  };\r\n\r\n  const handleClose = (...args) => {\r\n    setIsFocused(false);\r\n    onClose && onClose(...args);\r\n  };\r\n\r\n  const wrappedRenderInput = (params) => {\r\n    const inputElement = renderInput ? (\r\n      renderInput(params)\r\n    ) : (\r\n      <TextField {...params} label=\"Search\" variant=\"outlined\" />\r\n    );\r\n\r\n    return React.cloneElement(inputElement, {\r\n      ...inputElement.props,\r\n      autoFocus: isFocused,\r\n     \r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      className={isMobileFocused ? mobileBackgroundClassName : undefined}\r\n      sx={{\r\n        ...(isMobileFocused\r\n          ? {\r\n              position: \"fixed\",\r\n              top: 0,\r\n              left: 0,\r\n              width: \"100%\",\r\n              padding: \"16px 12px 16px 0px\",\r\n              background: theme.palette.background.paper,\r\n              zIndex: 1300,\r\n              boxShadow: \"0 2px 8px rgba(0,0,0,0.2)\",\r\n              height: \"100vh\",\r\n              maxWidth: \"-webkit-fill-available\",\r\n              display: \"flex\",\r\n              justifyContent: \"flex-start\",\r\n              flexDirection: \"row\",\r\n            }\r\n          : {\r\n              position: \"relative\",\r\n            }),\r\n        ...(mobileFocusedSx || {}),\r\n      }}\r\n    >\r\n      {isMobileFocused && (\r\n        <IconButton\r\n          className={backButtonClassName}\r\n          sx={{\r\n            alignSelf: \"flex-start\",\r\n            marginBottom: \"18px\",\r\n            ...(backButtonSx || {}),\r\n          }}\r\n          onClick={handleClose}\r\n        >\r\n          <ArrowBackIcon />\r\n        </IconButton>\r\n      )}\r\n\r\n      <Autocomplete\r\n        {...autocompleteProps}\r\n        onFocus= {handleFocus}\r\n        onClose={handleClose}\r\n        slotProps={{\r\n          paper: {\r\n            sx: {\r\n              ...(isMobileFocused\r\n                ? {\r\n                    boxShadow: \"none\",\r\n                    width: \"100vw\",\r\n                    left: 0,\r\n                    borderTop: `1.5px solid ${grey[400]}`,\r\n                    borderRadius: 0,\r\n                    mt: 1,\r\n                  }\r\n                : {}),\r\n              ...(slotProps?.paper?.sx || {}),\r\n            },\r\n            ...slotProps?.paper,\r\n          },\r\n          popper: {\r\n            sx: {\r\n              ...(isMobileFocused\r\n                ? {\r\n                    width: \"101vw !important\",\r\n                    left: \"0 !important\",\r\n                    right: \"0 !important\",\r\n                    overflow: \"hidden\",\r\n                  }\r\n                : {}),\r\n              ...(slotProps?.popper?.sx || {}),\r\n            },\r\n            ...slotProps?.popper,\r\n          },\r\n          ...slotProps,\r\n        }}\r\n        openOnFocus\r\n        blurOnSelect={isMobile ? true : props.blurOnSelect}\r\n        renderInput={isMobile ? wrappedRenderInput : renderInput}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ResponsiveAutocomplete;\r\n"],"names":["withStyles","theme","wrapper","position","focused","top","left","width","padding","background","palette","paper","zIndex","boxShadow","height","maxWidth","display","justifyContent","backButton","alignSelf","marginBottom","borderTop","grey","borderRadius","marginTop","spacing","popper","right","overflow","withTheme","props","_autocompleteProps$cl","_autocompleteProps$cl2","isFocused","setIsFocused","useState","classes","mobileBackgroundClassName","backButtonClassName","renderInput","onFocus","onClose","autocompleteProps","useTheme","isMobile","useMediaQuery","breakpoints","down","useEffect","document","body","style","documentElement","React","default","createElement","className","IconButton","ArrowBack","Autocomplete","_extends","e","handleClose","args","openOnFocus","trim","blurOnSelect","params","inputElement","TextField","label","variant","cloneElement","autoFocus","_slotProps$paper","_slotProps$popper","mobileFocusedSx","backButtonSx","slotProps","isMobileFocused","Box","sx","flexDirection","onClick","ArrowBackIcon","mt"],"mappings":"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"}