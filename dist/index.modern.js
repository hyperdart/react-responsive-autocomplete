import e,{useState as t,useEffect as o}from"react";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var o=arguments[t];for(var r in o)({}).hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e},r.apply(null,arguments)}let n,l,a,i,u,s,d,m,c;try{n=require("@mui/material/Autocomplete").default,l=require("@mui/material/Popper").default,a=require("@mui/material/TextField").default,i=require("@mui/material/IconButton").default,u=require("@mui/material/Paper").default,s=require("@mui/material/useMediaQuery").default,d=require("@mui/material/styles").useTheme,m=require("@mui/icons-material/ArrowBack").default,c=require("@mui/material/colors").grey}catch{console.log("in catch block")}const p=p=>{const[f,y]=t(!1),{mobileDivClassName:b,backButtonClassName:h,className:x,PaperComponent:w,PopperComponent:g,...v}=p,C=d(),E=!s(C.breakpoints.up("sm"));o((()=>{f&&E?(document.body.style.overflow="hidden",document.documentElement.style.overflow="hidden",document.body.style.position="fixed",document.body.style.width="100%"):(document.body.style.overflow="",document.documentElement.style.overflow="",document.body.style.position="",document.body.style.width="")}),[f,E]);const q={position:"fixed",top:0,left:0,width:"100%",padding:"16px 12px 16px 0px",background:C.palette.background.paper,zIndex:1300,boxShadow:"0 2px 8px rgba(0,0,0,0.2)",height:"100vh",maxWidth:"100%",display:"flex",justifyContent:"flex-start"},k={boxShadow:"none",width:"100vw",left:0,borderTop:`1.5px solid ${c[400]}`,borderRadius:0,marginTop:C.spacing(1)},P={width:"101vw",left:0,right:0,overflow:"hidden"};return e.createElement("div",{style:f&&E?q:{}},f&&E&&e.createElement(i,{className:h||"",style:{alignSelf:"flex-start",marginBottom:"18px"},onClick:()=>y(!1)},e.createElement(m,null)),e.createElement(n,r({},v,{onFocus:e=>{y(!0),p.onFocus&&p.onFocus(e)},onClose:(...e)=>{y(!1),p.onClose&&p.onClose(...e)},openOnFocus:!0,PaperComponent:E&&f&&!w?t=>e.createElement(u,r({},t,{style:{...t.style,...k}})):w,PopperComponent:E&&f&&!g?t=>e.createElement(l,r({},t,{style:{...t.style,...P}})):g,blurOnSelect:!!E||p.blurOnSelect,renderInput:E?t=>{const o=p.renderInput?p.renderInput(t):e.createElement(a,r({},t,{label:"Search",variant:"outlined"}));return e.cloneElement(o,{...o.props,autoFocus:f})}:p.renderInput})))};export{p as default};
//# sourceMappingURL=index.modern.js.map
